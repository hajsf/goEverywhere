# To compile for Android run:
# Make android
# To compile for iOS run:
# Make ios

$Env:IOS_OUT=lib/ios
$Env:ANDROID_OUT="$pwd\lib\android"
$Env:ANDROID_SDK=$HOME\AppData\Local\Android\Sdk # at macOS it is $(HOME)/Library/Android/sdk
$Env:NDK_BIN=$ANDROID_SDK\ndk\25.1.8937393\toolchains\llvm\prebuilt\windows-x86_64\bin
# at macOS it is $(ANDROID_SDK)/ndk/25.1.8937393/toolchains/llvm/prebuilt/darwin-x86_64/bin

android-armv7a:
	$Env:CGO_ENABLED=1 \
	$Env:GOOS=android \
	$Env:GOARCH=arm \
	$Env:GOARM=7 \
	$Env:CC=$NDK_BIN\armv7a-linux-androideabi33-clang \
	go build -ldflags="-w" -buildmode=c-shared -o $ANDROID_OUT\armeabi-v7a\libfoo.so goApp

android-arm64:
	CGO_ENABLED=1 \
	GOOS=android \
	GOARCH=arm64 \
	CC=$(NDK_BIN)/aarch64-linux-android33-clang \
	go build -ldflags="-w" -buildmode=c-shared -o $(ANDROID_OUT)/arm64-v8a/libfoo.so goApp

android-x86:
	CGO_ENABLED=1 \
	GOOS=android \
	GOARCH=386 \
	CC=$(NDK_BIN)/i686-linux-android33-clang \
	go build -ldflags="-w" -buildmode=c-shared -o $(ANDROID_OUT)/x86/libfoo.so goApp

android-x86_64:
	CGO_ENABLED=1 \
	GOOS=android \
	GOARCH=amd64 \
	CC=$(NDK_BIN)/x86_64-linux-android33-clang \
	go build -ldflags="-w" -buildmode=c-shared -o $(ANDROID_OUT)/x86_64/libfoo.so goApp

android: android-armv7a android-arm64 android-x86 android-x86_64

ios-arm64:
	CGO_ENABLED=1 \
	GOOS=darwin \
	GOARCH=arm64 \
	SDK=iphoneos \
	CC=$(shell go env GOROOT)/misc/ios/clangwrap.sh \
	CGO_CFLAGS="-fembed-bitcode" \
	go build -buildmode=c-archive -tags ios -o $(IOS_OUT)/arm64.a goApp

ios-x86_64:
	CGO_ENABLED=1 \
	GOOS=darwin \
	GOARCH=amd64 \
	SDK=iphonesimulator \
	CC=$(PWD)/clangwrap.sh \
	go build -buildmode=c-archive -tags ios -o $(IOS_OUT)/x86_64.a goApp

ios: ios-arm64 ios-x86_64
	lipo $(IOS_OUT)/x86_64.a $(IOS_OUT)/arm64.a -create -output $(IOS_OUT)/foo.a
	cp $(IOS_OUT)/arm64.h $(IOS_OUT)/foo.h